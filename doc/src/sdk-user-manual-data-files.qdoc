/****************************************************************************************
**
** Copyright (C) 2019 Jolla Ltd.
** Contact: David Llewellyn-jones <david.llewellyn-jones@jolla.com>
** See README and LICENSE.txt for licence details.
**
****************************************************************************************/

/*!
\page sdk-user-manual-data-files.html
\previouspage {Storing application configuration files}
\nextpage {Building system packages}
\contentspage {Sailfish SDK User Manual}{Contents}

\title Storing application data and cached files

Application data is any data that's generated by the user while using the
application, or application-generated data which isn't considered to be
configuration data. Just like the configuration, there's a specific location
where this data should be stored: in the \c $XDG_DATA_HOME/$$TARGET folder,
which in practice is set to \c $HOME/.local/share. However, as with the
configuration path, applications shouldn't hardcode these paths and users of \c
SailfishApp should use the path returned by \c
QStandardPaths::writableLocation(QStandardPaths::AppDataLocation) instead.

Note that by default \c
QStandardPaths::writableLocation(QStandardPaths::AppDataLocation) will actually
return \c $HOME/.local/share/$$TARGET/$$TARGET (i.e. with the $$TARGET folder
repeated). This is because when using \c SailfishApp both the application name
and the organization name are set to the name of your application, and the path
returned is of the form \c $HOME/.local/share/<ORGANIZATION_NAME>/$$TARGET.

The following example shows how the approach could be used in practice.

\quotefile example-others/src/harbour-demo-13.cpp

Currently application-specific data aren't stored as part of the Sailfish OS
backup process and any files stored in the data folder will remain on the
device if the application is uninstalled. However, this isn't guaranteed
behaviour and so shouldn't be relied upon not to change in the future.

To store cache files, use the location returned by
\c{QStandardPaths::writableLocation(QStandardPaths::CacheLocation)}. Cache
files can be removed at any time by the system if disk space is low and these
files are not guaranteed to be backed up.

You can also use the Qt Quick Local Storage API to store data directly from
your QML-only Sailfish application. \c SailfishApp will make sure that your
application uses an appropriate application-specific storage directory.

*/

